// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.3
// source: collection/collection.proto

package collection

import (
	waterquality "github.com/I-m-Surrounded-by-IoT/backend/api/waterquality"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CollectionRecordOrder int32

const (
	CollectionRecordOrder_TIMESTAMP  CollectionRecordOrder = 0
	CollectionRecordOrder_CREATED_AT CollectionRecordOrder = 1
)

// Enum value maps for CollectionRecordOrder.
var (
	CollectionRecordOrder_name = map[int32]string{
		0: "TIMESTAMP",
		1: "CREATED_AT",
	}
	CollectionRecordOrder_value = map[string]int32{
		"TIMESTAMP":  0,
		"CREATED_AT": 1,
	}
)

func (x CollectionRecordOrder) Enum() *CollectionRecordOrder {
	p := new(CollectionRecordOrder)
	*p = x
	return p
}

func (x CollectionRecordOrder) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CollectionRecordOrder) Descriptor() protoreflect.EnumDescriptor {
	return file_collection_collection_proto_enumTypes[0].Descriptor()
}

func (CollectionRecordOrder) Type() protoreflect.EnumType {
	return &file_collection_collection_proto_enumTypes[0]
}

func (x CollectionRecordOrder) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CollectionRecordOrder.Descriptor instead.
func (CollectionRecordOrder) EnumDescriptor() ([]byte, []int) {
	return file_collection_collection_proto_rawDescGZIP(), []int{0}
}

type Sort int32

const (
	Sort_DESC Sort = 0
	Sort_ASC  Sort = 1
)

// Enum value maps for Sort.
var (
	Sort_name = map[int32]string{
		0: "DESC",
		1: "ASC",
	}
	Sort_value = map[string]int32{
		"DESC": 0,
		"ASC":  1,
	}
)

func (x Sort) Enum() *Sort {
	p := new(Sort)
	*p = x
	return p
}

func (x Sort) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Sort) Descriptor() protoreflect.EnumDescriptor {
	return file_collection_collection_proto_enumTypes[1].Descriptor()
}

func (Sort) Type() protoreflect.EnumType {
	return &file_collection_collection_proto_enumTypes[1]
}

func (x Sort) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Sort.Descriptor instead.
func (Sort) EnumDescriptor() ([]byte, []int) {
	return file_collection_collection_proto_rawDescGZIP(), []int{1}
}

type GetStreamLatestWithinRangeRespType int32

const (
	GetStreamLatestWithinRangeRespType_ADD    GetStreamLatestWithinRangeRespType = 0
	GetStreamLatestWithinRangeRespType_REMOVE GetStreamLatestWithinRangeRespType = 1
)

// Enum value maps for GetStreamLatestWithinRangeRespType.
var (
	GetStreamLatestWithinRangeRespType_name = map[int32]string{
		0: "ADD",
		1: "REMOVE",
	}
	GetStreamLatestWithinRangeRespType_value = map[string]int32{
		"ADD":    0,
		"REMOVE": 1,
	}
)

func (x GetStreamLatestWithinRangeRespType) Enum() *GetStreamLatestWithinRangeRespType {
	p := new(GetStreamLatestWithinRangeRespType)
	*p = x
	return p
}

func (x GetStreamLatestWithinRangeRespType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetStreamLatestWithinRangeRespType) Descriptor() protoreflect.EnumDescriptor {
	return file_collection_collection_proto_enumTypes[2].Descriptor()
}

func (GetStreamLatestWithinRangeRespType) Type() protoreflect.EnumType {
	return &file_collection_collection_proto_enumTypes[2]
}

func (x GetStreamLatestWithinRangeRespType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetStreamLatestWithinRangeRespType.Descriptor instead.
func (GetStreamLatestWithinRangeRespType) EnumDescriptor() ([]byte, []int) {
	return file_collection_collection_proto_rawDescGZIP(), []int{2}
}

type CreateCollectionRecordReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId   uint64                `protobuf:"varint,1,opt,name=device_id,json=deviceId,proto3" json:"deviceId" form:"deviceId"` // @gotags: form:"deviceId" json:"deviceId"
	Data       *waterquality.Quality `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	ReceivedAt int64                 `protobuf:"varint,3,opt,name=received_at,json=receivedAt,proto3" json:"receivedAt" form:"receivedAt"` // @gotags: form:"receivedAt" json:"receivedAt"
}

func (x *CreateCollectionRecordReq) Reset() {
	*x = CreateCollectionRecordReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_collection_collection_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCollectionRecordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCollectionRecordReq) ProtoMessage() {}

func (x *CreateCollectionRecordReq) ProtoReflect() protoreflect.Message {
	mi := &file_collection_collection_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCollectionRecordReq.ProtoReflect.Descriptor instead.
func (*CreateCollectionRecordReq) Descriptor() ([]byte, []int) {
	return file_collection_collection_proto_rawDescGZIP(), []int{0}
}

func (x *CreateCollectionRecordReq) GetDeviceId() uint64 {
	if x != nil {
		return x.DeviceId
	}
	return 0
}

func (x *CreateCollectionRecordReq) GetData() *waterquality.Quality {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CreateCollectionRecordReq) GetReceivedAt() int64 {
	if x != nil {
		return x.ReceivedAt
	}
	return 0
}

type CollectionRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint64                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	DeviceId   uint64                `protobuf:"varint,2,opt,name=device_id,json=deviceId,proto3" json:"deviceId"`       // @gotags: json:"deviceId"
	CreatedAt  int64                 `protobuf:"varint,3,opt,name=created_at,json=createdAt,proto3" json:"createdAt"`    // @gotags: json:"createdAt"
	ReceivedAt int64                 `protobuf:"varint,4,opt,name=received_at,json=receivedAt,proto3" json:"receivedAt"` // @gotags: json:"receivedAt"
	Data       *waterquality.Quality `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CollectionRecord) Reset() {
	*x = CollectionRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_collection_collection_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CollectionRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectionRecord) ProtoMessage() {}

func (x *CollectionRecord) ProtoReflect() protoreflect.Message {
	mi := &file_collection_collection_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectionRecord.ProtoReflect.Descriptor instead.
func (*CollectionRecord) Descriptor() ([]byte, []int) {
	return file_collection_collection_proto_rawDescGZIP(), []int{1}
}

func (x *CollectionRecord) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CollectionRecord) GetDeviceId() uint64 {
	if x != nil {
		return x.DeviceId
	}
	return 0
}

func (x *CollectionRecord) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *CollectionRecord) GetReceivedAt() int64 {
	if x != nil {
		return x.ReceivedAt
	}
	return 0
}

func (x *CollectionRecord) GetData() *waterquality.Quality {
	if x != nil {
		return x.Data
	}
	return nil
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_collection_collection_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_collection_collection_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_collection_collection_proto_rawDescGZIP(), []int{2}
}

type ListCollectionRecordReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId uint64                `protobuf:"varint,1,opt,name=device_id,json=deviceId,proto3" json:"deviceId" form:"deviceId"`                     // @gotags: form:"deviceId" json:"deviceId"
	Page     uint64                `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty" form:"page"`                                             // @gotags: form:"page"
	Size     uint64                `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty" form:"size"`                                             // @gotags: form:"size"
	Before   int64                 `protobuf:"varint,4,opt,name=before,proto3" json:"before,omitempty" form:"before"`                                         // @gotags: form:"before"
	After    int64                 `protobuf:"varint,5,opt,name=after,proto3" json:"after,omitempty" form:"after"`                                           // @gotags: form:"after"
	Order    CollectionRecordOrder `protobuf:"varint,6,opt,name=order,proto3,enum=api.collection.CollectionRecordOrder" json:"order,omitempty" form:"order"` // @gotags: form:"order"
	Sort     Sort                  `protobuf:"varint,7,opt,name=sort,proto3,enum=api.collection.Sort" json:"sort,omitempty" form:"sort"`                    // @gotags: form:"sort"
}

func (x *ListCollectionRecordReq) Reset() {
	*x = ListCollectionRecordReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_collection_collection_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCollectionRecordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCollectionRecordReq) ProtoMessage() {}

func (x *ListCollectionRecordReq) ProtoReflect() protoreflect.Message {
	mi := &file_collection_collection_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCollectionRecordReq.ProtoReflect.Descriptor instead.
func (*ListCollectionRecordReq) Descriptor() ([]byte, []int) {
	return file_collection_collection_proto_rawDescGZIP(), []int{3}
}

func (x *ListCollectionRecordReq) GetDeviceId() uint64 {
	if x != nil {
		return x.DeviceId
	}
	return 0
}

func (x *ListCollectionRecordReq) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListCollectionRecordReq) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ListCollectionRecordReq) GetBefore() int64 {
	if x != nil {
		return x.Before
	}
	return 0
}

func (x *ListCollectionRecordReq) GetAfter() int64 {
	if x != nil {
		return x.After
	}
	return 0
}

func (x *ListCollectionRecordReq) GetOrder() CollectionRecordOrder {
	if x != nil {
		return x.Order
	}
	return CollectionRecordOrder_TIMESTAMP
}

func (x *ListCollectionRecordReq) GetSort() Sort {
	if x != nil {
		return x.Sort
	}
	return Sort_DESC
}

type ListCollectionRecordResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Records []*GetLatestRecordsAndGuess `protobuf:"bytes,1,rep,name=records,proto3" json:"records,omitempty"`
	Total   int64                       `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListCollectionRecordResp) Reset() {
	*x = ListCollectionRecordResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_collection_collection_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCollectionRecordResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCollectionRecordResp) ProtoMessage() {}

func (x *ListCollectionRecordResp) ProtoReflect() protoreflect.Message {
	mi := &file_collection_collection_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCollectionRecordResp.ProtoReflect.Descriptor instead.
func (*ListCollectionRecordResp) Descriptor() ([]byte, []int) {
	return file_collection_collection_proto_rawDescGZIP(), []int{4}
}

func (x *ListCollectionRecordResp) GetRecords() []*GetLatestRecordsAndGuess {
	if x != nil {
		return x.Records
	}
	return nil
}

func (x *ListCollectionRecordResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetPredictQualityReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId uint64 `protobuf:"varint,1,opt,name=device_id,json=deviceId,proto3" json:"deviceId" form:"deviceId"` // @gotags: form:"deviceId" json:"deviceId"
}

func (x *GetPredictQualityReq) Reset() {
	*x = GetPredictQualityReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_collection_collection_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPredictQualityReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPredictQualityReq) ProtoMessage() {}

func (x *GetPredictQualityReq) ProtoReflect() protoreflect.Message {
	mi := &file_collection_collection_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPredictQualityReq.ProtoReflect.Descriptor instead.
func (*GetPredictQualityReq) Descriptor() ([]byte, []int) {
	return file_collection_collection_proto_rawDescGZIP(), []int{5}
}

func (x *GetPredictQualityReq) GetDeviceId() uint64 {
	if x != nil {
		return x.DeviceId
	}
	return 0
}

type GetDeviceStreamReportReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" form:"id"` // @gotags: form:"id"
}

func (x *GetDeviceStreamReportReq) Reset() {
	*x = GetDeviceStreamReportReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_collection_collection_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeviceStreamReportReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceStreamReportReq) ProtoMessage() {}

func (x *GetDeviceStreamReportReq) ProtoReflect() protoreflect.Message {
	mi := &file_collection_collection_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceStreamReportReq.ProtoReflect.Descriptor instead.
func (*GetDeviceStreamReportReq) Descriptor() ([]byte, []int) {
	return file_collection_collection_proto_rawDescGZIP(), []int{6}
}

func (x *GetDeviceStreamReportReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetDeviceStreamEventReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" form:"id"`                                     // @gotags: form:"id"
	EventFilter string `protobuf:"bytes,2,opt,name=event_filter,json=eventFilter,proto3" json:"eventFilter" form:"eventFilter"` // @gotags: form:"eventFilter" json:"eventFilter"
}

func (x *GetDeviceStreamEventReq) Reset() {
	*x = GetDeviceStreamEventReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_collection_collection_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeviceStreamEventReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceStreamEventReq) ProtoMessage() {}

func (x *GetDeviceStreamEventReq) ProtoReflect() protoreflect.Message {
	mi := &file_collection_collection_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceStreamEventReq.ProtoReflect.Descriptor instead.
func (*GetDeviceStreamEventReq) Descriptor() ([]byte, []int) {
	return file_collection_collection_proto_rawDescGZIP(), []int{7}
}

func (x *GetDeviceStreamEventReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetDeviceStreamEventReq) GetEventFilter() string {
	if x != nil {
		return x.EventFilter
	}
	return ""
}

type GetDeviceStreamEventResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Topic     string `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic"`          // @gotags: json:"topic"
	Message   string `protobuf:"bytes,2,opt,name=message,proto3" json:"message"`      // @gotags: json:"message"
	Timestamp int64  `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp"` // @gotags: json:"timestamp"
}

func (x *GetDeviceStreamEventResp) Reset() {
	*x = GetDeviceStreamEventResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_collection_collection_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeviceStreamEventResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceStreamEventResp) ProtoMessage() {}

func (x *GetDeviceStreamEventResp) ProtoReflect() protoreflect.Message {
	mi := &file_collection_collection_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceStreamEventResp.ProtoReflect.Descriptor instead.
func (*GetDeviceStreamEventResp) Descriptor() ([]byte, []int) {
	return file_collection_collection_proto_rawDescGZIP(), []int{8}
}

func (x *GetDeviceStreamEventResp) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *GetDeviceStreamEventResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetDeviceStreamEventResp) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type GetDeviceLastReportReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetDeviceLastReportReq) Reset() {
	*x = GetDeviceLastReportReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_collection_collection_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeviceLastReportReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceLastReportReq) ProtoMessage() {}

func (x *GetDeviceLastReportReq) ProtoReflect() protoreflect.Message {
	mi := &file_collection_collection_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceLastReportReq.ProtoReflect.Descriptor instead.
func (*GetDeviceLastReportReq) Descriptor() ([]byte, []int) {
	return file_collection_collection_proto_rawDescGZIP(), []int{9}
}

func (x *GetDeviceLastReportReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetLatestWithinRangeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CenterLat    float64 `protobuf:"fixed64,1,opt,name=center_lat,json=centerLat,proto3" json:"centerLat" form:"centerLat"` // @gotags: form:"centerLat" json:"centerLat"
	CenterLng    float64 `protobuf:"fixed64,2,opt,name=center_lng,json=centerLng,proto3" json:"centerLng" form:"centerLng"` // @gotags: form:"centerLng" json:"centerLng"
	RadiusMeters float64 `protobuf:"fixed64,3,opt,name=radiusMeters,proto3" json:"radiusMeters" form:"radiusMeters"`            // @gotags: form:"radiusMeters" json:"radiusMeters"
}

func (x *GetLatestWithinRangeReq) Reset() {
	*x = GetLatestWithinRangeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_collection_collection_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLatestWithinRangeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLatestWithinRangeReq) ProtoMessage() {}

func (x *GetLatestWithinRangeReq) ProtoReflect() protoreflect.Message {
	mi := &file_collection_collection_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLatestWithinRangeReq.ProtoReflect.Descriptor instead.
func (*GetLatestWithinRangeReq) Descriptor() ([]byte, []int) {
	return file_collection_collection_proto_rawDescGZIP(), []int{10}
}

func (x *GetLatestWithinRangeReq) GetCenterLat() float64 {
	if x != nil {
		return x.CenterLat
	}
	return 0
}

func (x *GetLatestWithinRangeReq) GetCenterLng() float64 {
	if x != nil {
		return x.CenterLng
	}
	return 0
}

func (x *GetLatestWithinRangeReq) GetRadiusMeters() float64 {
	if x != nil {
		return x.RadiusMeters
	}
	return 0
}

type GetLatestRecordsAndGuess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Record *CollectionRecord                 `protobuf:"bytes,1,opt,name=record,proto3" json:"record,omitempty"`
	Guess  *waterquality.PredictAndGuessResp `protobuf:"bytes,2,opt,name=guess,proto3" json:"guess,omitempty"`
	Level  int64                             `protobuf:"varint,3,opt,name=level,proto3" json:"level,omitempty"`
}

func (x *GetLatestRecordsAndGuess) Reset() {
	*x = GetLatestRecordsAndGuess{}
	if protoimpl.UnsafeEnabled {
		mi := &file_collection_collection_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLatestRecordsAndGuess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLatestRecordsAndGuess) ProtoMessage() {}

func (x *GetLatestRecordsAndGuess) ProtoReflect() protoreflect.Message {
	mi := &file_collection_collection_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLatestRecordsAndGuess.ProtoReflect.Descriptor instead.
func (*GetLatestRecordsAndGuess) Descriptor() ([]byte, []int) {
	return file_collection_collection_proto_rawDescGZIP(), []int{11}
}

func (x *GetLatestRecordsAndGuess) GetRecord() *CollectionRecord {
	if x != nil {
		return x.Record
	}
	return nil
}

func (x *GetLatestRecordsAndGuess) GetGuess() *waterquality.PredictAndGuessResp {
	if x != nil {
		return x.Guess
	}
	return nil
}

func (x *GetLatestRecordsAndGuess) GetLevel() int64 {
	if x != nil {
		return x.Level
	}
	return 0
}

type GetLatestRecordsWithinRangeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Records []*GetLatestRecordsAndGuess `protobuf:"bytes,1,rep,name=records,proto3" json:"records,omitempty"`
}

func (x *GetLatestRecordsWithinRangeResp) Reset() {
	*x = GetLatestRecordsWithinRangeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_collection_collection_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLatestRecordsWithinRangeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLatestRecordsWithinRangeResp) ProtoMessage() {}

func (x *GetLatestRecordsWithinRangeResp) ProtoReflect() protoreflect.Message {
	mi := &file_collection_collection_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLatestRecordsWithinRangeResp.ProtoReflect.Descriptor instead.
func (*GetLatestRecordsWithinRangeResp) Descriptor() ([]byte, []int) {
	return file_collection_collection_proto_rawDescGZIP(), []int{12}
}

func (x *GetLatestRecordsWithinRangeResp) GetRecords() []*GetLatestRecordsAndGuess {
	if x != nil {
		return x.Records
	}
	return nil
}

type GetLatestIdWithinRangeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []uint64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *GetLatestIdWithinRangeResp) Reset() {
	*x = GetLatestIdWithinRangeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_collection_collection_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLatestIdWithinRangeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLatestIdWithinRangeResp) ProtoMessage() {}

func (x *GetLatestIdWithinRangeResp) ProtoReflect() protoreflect.Message {
	mi := &file_collection_collection_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLatestIdWithinRangeResp.ProtoReflect.Descriptor instead.
func (*GetLatestIdWithinRangeResp) Descriptor() ([]byte, []int) {
	return file_collection_collection_proto_rawDescGZIP(), []int{13}
}

func (x *GetLatestIdWithinRangeResp) GetIds() []uint64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type GetStreamLatestWithinRangeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CenterLat    float64 `protobuf:"fixed64,1,opt,name=center_lat,json=centerLat,proto3" json:"centerLat" form:"centerLat"` // @gotags: form:"centerLat" json:"centerLat"
	CenterLng    float64 `protobuf:"fixed64,2,opt,name=center_lng,json=centerLng,proto3" json:"centerLng" form:"centerLng"` // @gotags: form:"centerLng" json:"centerLng"
	RadiusMeters float64 `protobuf:"fixed64,3,opt,name=radiusMeters,proto3" json:"radiusMeters" form:"radiusMeters"`            // @gotags: form:"radiusMeters" json:"radiusMeters"
	Interval     uint32  `protobuf:"varint,4,opt,name=interval,proto3" json:"interval" form:"interval"`                     // @gotags: form:"interval" json:"interval"
}

func (x *GetStreamLatestWithinRangeReq) Reset() {
	*x = GetStreamLatestWithinRangeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_collection_collection_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStreamLatestWithinRangeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStreamLatestWithinRangeReq) ProtoMessage() {}

func (x *GetStreamLatestWithinRangeReq) ProtoReflect() protoreflect.Message {
	mi := &file_collection_collection_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStreamLatestWithinRangeReq.ProtoReflect.Descriptor instead.
func (*GetStreamLatestWithinRangeReq) Descriptor() ([]byte, []int) {
	return file_collection_collection_proto_rawDescGZIP(), []int{14}
}

func (x *GetStreamLatestWithinRangeReq) GetCenterLat() float64 {
	if x != nil {
		return x.CenterLat
	}
	return 0
}

func (x *GetStreamLatestWithinRangeReq) GetCenterLng() float64 {
	if x != nil {
		return x.CenterLng
	}
	return 0
}

func (x *GetStreamLatestWithinRangeReq) GetRadiusMeters() float64 {
	if x != nil {
		return x.RadiusMeters
	}
	return 0
}

func (x *GetStreamLatestWithinRangeReq) GetInterval() uint32 {
	if x != nil {
		return x.Interval
	}
	return 0
}

type GetStreamLatestRecordsWithinRangeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Records []*GetLatestRecordsAndGuess        `protobuf:"bytes,1,rep,name=records,proto3" json:"records,omitempty"`
	Ids     []uint64                           `protobuf:"varint,2,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	Type    GetStreamLatestWithinRangeRespType `protobuf:"varint,3,opt,name=type,proto3,enum=api.collection.GetStreamLatestWithinRangeRespType" json:"type,omitempty"`
}

func (x *GetStreamLatestRecordsWithinRangeResp) Reset() {
	*x = GetStreamLatestRecordsWithinRangeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_collection_collection_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStreamLatestRecordsWithinRangeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStreamLatestRecordsWithinRangeResp) ProtoMessage() {}

func (x *GetStreamLatestRecordsWithinRangeResp) ProtoReflect() protoreflect.Message {
	mi := &file_collection_collection_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStreamLatestRecordsWithinRangeResp.ProtoReflect.Descriptor instead.
func (*GetStreamLatestRecordsWithinRangeResp) Descriptor() ([]byte, []int) {
	return file_collection_collection_proto_rawDescGZIP(), []int{15}
}

func (x *GetStreamLatestRecordsWithinRangeResp) GetRecords() []*GetLatestRecordsAndGuess {
	if x != nil {
		return x.Records
	}
	return nil
}

func (x *GetStreamLatestRecordsWithinRangeResp) GetIds() []uint64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *GetStreamLatestRecordsWithinRangeResp) GetType() GetStreamLatestWithinRangeRespType {
	if x != nil {
		return x.Type
	}
	return GetStreamLatestWithinRangeRespType_ADD
}

type GetStreamLatestIdWithinRangeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids  []uint64                           `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	Type GetStreamLatestWithinRangeRespType `protobuf:"varint,2,opt,name=type,proto3,enum=api.collection.GetStreamLatestWithinRangeRespType" json:"type,omitempty"`
}

func (x *GetStreamLatestIdWithinRangeResp) Reset() {
	*x = GetStreamLatestIdWithinRangeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_collection_collection_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStreamLatestIdWithinRangeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStreamLatestIdWithinRangeResp) ProtoMessage() {}

func (x *GetStreamLatestIdWithinRangeResp) ProtoReflect() protoreflect.Message {
	mi := &file_collection_collection_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStreamLatestIdWithinRangeResp.ProtoReflect.Descriptor instead.
func (*GetStreamLatestIdWithinRangeResp) Descriptor() ([]byte, []int) {
	return file_collection_collection_proto_rawDescGZIP(), []int{16}
}

func (x *GetStreamLatestIdWithinRangeResp) GetIds() []uint64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *GetStreamLatestIdWithinRangeResp) GetType() GetStreamLatestWithinRangeRespType {
	if x != nil {
		return x.Type
	}
	return GetStreamLatestWithinRangeRespType_ADD
}

var File_collection_collection_proto protoreflect.FileDescriptor

var file_collection_collection_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x61,
	0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x77, 0x61, 0x74,
	0x65, 0x72, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x2f, 0x77, 0x61, 0x74, 0x65, 0x72, 0x71,
	0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x88, 0x01, 0x0a,
	0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x61, 0x74, 0x65,
	0x72, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x64, 0x41, 0x74, 0x22, 0xae, 0x01, 0x0a, 0x10, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x41, 0x74, 0x12, 0x2d, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x61,
	0x74, 0x65, 0x72, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x51, 0x75, 0x61, 0x6c, 0x69,
	0x74, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0xf3, 0x01, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a,
	0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x66,
	0x74, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72,
	0x12, 0x3b, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x28, 0x0a,
	0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x6f, 0x72,
	0x74, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x22, 0x74, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x42, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x41, 0x6e, 0x64, 0x47, 0x75, 0x65, 0x73, 0x73, 0x52, 0x07,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x33, 0x0a,
	0x14, 0x47, 0x65, 0x74, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x51, 0x75, 0x61, 0x6c, 0x69,
	0x74, 0x79, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x64, 0x22, 0x2a, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4c,
	0x0a, 0x17, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x68, 0x0a, 0x18,
	0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69,
	0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x28, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x4c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x7b, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x57, 0x69, 0x74,
	0x68, 0x69, 0x6e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x65, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x6c, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x09, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x4c, 0x61, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x65,
	0x6e, 0x74, 0x65, 0x72, 0x5f, 0x6c, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09,
	0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x4c, 0x6e, 0x67, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x61, 0x64,
	0x69, 0x75, 0x73, 0x4d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0c, 0x72, 0x61, 0x64, 0x69, 0x75, 0x73, 0x4d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x22, 0xa7, 0x01,
	0x0a, 0x18, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x73, 0x41, 0x6e, 0x64, 0x47, 0x75, 0x65, 0x73, 0x73, 0x12, 0x38, 0x0a, 0x06, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x06, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x12, 0x3b, 0x0a, 0x05, 0x67, 0x75, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x61, 0x74, 0x65, 0x72, 0x71,
	0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x41, 0x6e,
	0x64, 0x47, 0x75, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x52, 0x05, 0x67, 0x75, 0x65, 0x73,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x65, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x4c, 0x61,
	0x74, 0x65, 0x73, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x57, 0x69, 0x74, 0x68, 0x69,
	0x6e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x42, 0x0a, 0x07, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74,
	0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x41, 0x6e, 0x64,
	0x47, 0x75, 0x65, 0x73, 0x73, 0x52, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x22, 0x2e,
	0x0a, 0x1a, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x49, 0x64, 0x57, 0x69, 0x74,
	0x68, 0x69, 0x6e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03,
	0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x9d,
	0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4c, 0x61, 0x74, 0x65,
	0x73, 0x74, 0x57, 0x69, 0x74, 0x68, 0x69, 0x6e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x6c, 0x61, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x4c, 0x61, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x6c, 0x6e, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x09, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x4c, 0x6e, 0x67, 0x12, 0x22,
	0x0a, 0x0c, 0x72, 0x61, 0x64, 0x69, 0x75, 0x73, 0x4d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x72, 0x61, 0x64, 0x69, 0x75, 0x73, 0x4d, 0x65, 0x74, 0x65,
	0x72, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x22, 0xc5,
	0x01, 0x0a, 0x25, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4c, 0x61, 0x74, 0x65,
	0x73, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x57, 0x69, 0x74, 0x68, 0x69, 0x6e, 0x52,
	0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x42, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61,
	0x74, 0x65, 0x73, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x41, 0x6e, 0x64, 0x47, 0x75,
	0x65, 0x73, 0x73, 0x52, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x10, 0x0a, 0x03,
	0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x04, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x46,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x57, 0x69, 0x74,
	0x68, 0x69, 0x6e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x7c, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x49, 0x64, 0x57, 0x69, 0x74, 0x68, 0x69,
	0x6e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x46, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x57, 0x69, 0x74, 0x68, 0x69,
	0x6e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x2a, 0x36, 0x0a, 0x15, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x0d, 0x0a,
	0x09, 0x54, 0x49, 0x4d, 0x45, 0x53, 0x54, 0x41, 0x4d, 0x50, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a,
	0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x5f, 0x41, 0x54, 0x10, 0x01, 0x2a, 0x19, 0x0a, 0x04,
	0x53, 0x6f, 0x72, 0x74, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x45, 0x53, 0x43, 0x10, 0x00, 0x12, 0x07,
	0x0a, 0x03, 0x41, 0x53, 0x43, 0x10, 0x01, 0x2a, 0x39, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x57, 0x69, 0x74, 0x68, 0x69, 0x6e,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x07, 0x0a,
	0x03, 0x41, 0x44, 0x44, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x52, 0x45, 0x4d, 0x4f, 0x56, 0x45,
	0x10, 0x01, 0x32, 0xb3, 0x0c, 0x0a, 0x0a, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x79, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x29, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x1d, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x17, 0x3a, 0x01, 0x2a, 0x22, 0x12, 0x2f, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x85, 0x01, 0x0a,
	0x14, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x28,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14,
	0x12, 0x12, 0x2f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x12, 0x85, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x72, 0x65, 0x64,
	0x69, 0x63, 0x74, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x24, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x50,
	0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71,
	0x1a, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x61, 0x74, 0x65, 0x72, 0x71, 0x75, 0x61, 0x6c,
	0x69, 0x74, 0x79, 0x2e, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x41, 0x6e, 0x64, 0x47, 0x75,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x12,
	0x1b, 0x2f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x70, 0x72, 0x65,
	0x64, 0x69, 0x63, 0x74, 0x5f, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x9f, 0x01, 0x0a,
	0x15, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71,
	0x1a, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x22, 0x2f, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x29, 0x3a, 0x01, 0x2a, 0x22, 0x24, 0x2f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2f, 0x67, 0x65, 0x74, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x30, 0x01, 0x12, 0x9b,
	0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x1a, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x2e, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x28, 0x3a, 0x01, 0x2a, 0x22, 0x23, 0x2f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x2f, 0x67, 0x65, 0x74, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x30, 0x01, 0x12, 0x81, 0x01, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x61, 0x73, 0x74, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x12, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4c,
	0x61, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x22, 0x20,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x12, 0x18, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2f,
	0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x12, 0xa7, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x73, 0x57, 0x69, 0x74, 0x68, 0x69, 0x6e, 0x52, 0x61, 0x6e, 0x67, 0x65,
	0x12, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x57, 0x69, 0x74, 0x68, 0x69,
	0x6e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x2f, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61,
	0x74, 0x65, 0x73, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x57, 0x69, 0x74, 0x68, 0x69,
	0x6e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x2e, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x28, 0x3a, 0x01, 0x2a, 0x22, 0x23, 0x2f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x2f, 0x67, 0x65, 0x74, 0x5f, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x77, 0x69,
	0x74, 0x68, 0x69, 0x6e, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x12, 0xa0, 0x01, 0x0a, 0x16, 0x47,
	0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x49, 0x64, 0x57, 0x69, 0x74, 0x68, 0x69, 0x6e,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74,
	0x57, 0x69, 0x74, 0x68, 0x69, 0x6e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x2a,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x49, 0x64, 0x57, 0x69, 0x74, 0x68, 0x69,
	0x6e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x31, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x2b, 0x3a, 0x01, 0x2a, 0x22, 0x26, 0x2f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x2f, 0x67, 0x65, 0x74, 0x5f, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64,
	0x5f, 0x77, 0x69, 0x74, 0x68, 0x69, 0x6e, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x12, 0xca, 0x01,
	0x0a, 0x21, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4c, 0x61, 0x74, 0x65, 0x73,
	0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x57, 0x69, 0x74, 0x68, 0x69, 0x6e, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x12, 0x2d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4c, 0x61,
	0x74, 0x65, 0x73, 0x74, 0x57, 0x69, 0x74, 0x68, 0x69, 0x6e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x1a, 0x35, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4c, 0x61, 0x74,
	0x65, 0x73, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x57, 0x69, 0x74, 0x68, 0x69, 0x6e,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x3d, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x37, 0x3a, 0x01, 0x2a, 0x22, 0x32, 0x2f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x2f, 0x67, 0x65, 0x74, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x6c, 0x61, 0x74,
	0x65, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x5f, 0x77, 0x69, 0x74, 0x68,
	0x69, 0x6e, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x30, 0x01, 0x12, 0xbb, 0x01, 0x0a, 0x1c, 0x47,
	0x65, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x49, 0x64,
	0x57, 0x69, 0x74, 0x68, 0x69, 0x6e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x2d, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x57, 0x69, 0x74, 0x68,
	0x69, 0x6e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x30, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x49, 0x64, 0x57, 0x69, 0x74,
	0x68, 0x69, 0x6e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x38, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x32, 0x3a, 0x01, 0x2a, 0x22, 0x2d, 0x2f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x67, 0x65, 0x74, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f,
	0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x69, 0x6e,
	0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x30, 0x01, 0x42, 0x44, 0x5a, 0x42, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x49, 0x2d, 0x6d, 0x2d, 0x53, 0x75, 0x72, 0x72, 0x6f,
	0x75, 0x6e, 0x64, 0x65, 0x64, 0x2d, 0x62, 0x79, 0x2d, 0x49, 0x6f, 0x54, 0x2f, 0x62, 0x61, 0x63,
	0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x3b, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_collection_collection_proto_rawDescOnce sync.Once
	file_collection_collection_proto_rawDescData = file_collection_collection_proto_rawDesc
)

func file_collection_collection_proto_rawDescGZIP() []byte {
	file_collection_collection_proto_rawDescOnce.Do(func() {
		file_collection_collection_proto_rawDescData = protoimpl.X.CompressGZIP(file_collection_collection_proto_rawDescData)
	})
	return file_collection_collection_proto_rawDescData
}

var file_collection_collection_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_collection_collection_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_collection_collection_proto_goTypes = []any{
	(CollectionRecordOrder)(0),                    // 0: api.collection.CollectionRecordOrder
	(Sort)(0),                                     // 1: api.collection.Sort
	(GetStreamLatestWithinRangeRespType)(0),       // 2: api.collection.GetStreamLatestWithinRangeRespType
	(*CreateCollectionRecordReq)(nil),             // 3: api.collection.CreateCollectionRecordReq
	(*CollectionRecord)(nil),                      // 4: api.collection.CollectionRecord
	(*Empty)(nil),                                 // 5: api.collection.Empty
	(*ListCollectionRecordReq)(nil),               // 6: api.collection.ListCollectionRecordReq
	(*ListCollectionRecordResp)(nil),              // 7: api.collection.ListCollectionRecordResp
	(*GetPredictQualityReq)(nil),                  // 8: api.collection.GetPredictQualityReq
	(*GetDeviceStreamReportReq)(nil),              // 9: api.collection.GetDeviceStreamReportReq
	(*GetDeviceStreamEventReq)(nil),               // 10: api.collection.GetDeviceStreamEventReq
	(*GetDeviceStreamEventResp)(nil),              // 11: api.collection.GetDeviceStreamEventResp
	(*GetDeviceLastReportReq)(nil),                // 12: api.collection.GetDeviceLastReportReq
	(*GetLatestWithinRangeReq)(nil),               // 13: api.collection.GetLatestWithinRangeReq
	(*GetLatestRecordsAndGuess)(nil),              // 14: api.collection.GetLatestRecordsAndGuess
	(*GetLatestRecordsWithinRangeResp)(nil),       // 15: api.collection.GetLatestRecordsWithinRangeResp
	(*GetLatestIdWithinRangeResp)(nil),            // 16: api.collection.GetLatestIdWithinRangeResp
	(*GetStreamLatestWithinRangeReq)(nil),         // 17: api.collection.GetStreamLatestWithinRangeReq
	(*GetStreamLatestRecordsWithinRangeResp)(nil), // 18: api.collection.GetStreamLatestRecordsWithinRangeResp
	(*GetStreamLatestIdWithinRangeResp)(nil),      // 19: api.collection.GetStreamLatestIdWithinRangeResp
	(*waterquality.Quality)(nil),                  // 20: api.waterquality.Quality
	(*waterquality.PredictAndGuessResp)(nil),      // 21: api.waterquality.PredictAndGuessResp
}
var file_collection_collection_proto_depIdxs = []int32{
	20, // 0: api.collection.CreateCollectionRecordReq.data:type_name -> api.waterquality.Quality
	20, // 1: api.collection.CollectionRecord.data:type_name -> api.waterquality.Quality
	0,  // 2: api.collection.ListCollectionRecordReq.order:type_name -> api.collection.CollectionRecordOrder
	1,  // 3: api.collection.ListCollectionRecordReq.sort:type_name -> api.collection.Sort
	14, // 4: api.collection.ListCollectionRecordResp.records:type_name -> api.collection.GetLatestRecordsAndGuess
	4,  // 5: api.collection.GetLatestRecordsAndGuess.record:type_name -> api.collection.CollectionRecord
	21, // 6: api.collection.GetLatestRecordsAndGuess.guess:type_name -> api.waterquality.PredictAndGuessResp
	14, // 7: api.collection.GetLatestRecordsWithinRangeResp.records:type_name -> api.collection.GetLatestRecordsAndGuess
	14, // 8: api.collection.GetStreamLatestRecordsWithinRangeResp.records:type_name -> api.collection.GetLatestRecordsAndGuess
	2,  // 9: api.collection.GetStreamLatestRecordsWithinRangeResp.type:type_name -> api.collection.GetStreamLatestWithinRangeRespType
	2,  // 10: api.collection.GetStreamLatestIdWithinRangeResp.type:type_name -> api.collection.GetStreamLatestWithinRangeRespType
	3,  // 11: api.collection.Collection.CreateCollectionRecord:input_type -> api.collection.CreateCollectionRecordReq
	6,  // 12: api.collection.Collection.ListCollectionRecord:input_type -> api.collection.ListCollectionRecordReq
	8,  // 13: api.collection.Collection.GetPredictQuality:input_type -> api.collection.GetPredictQualityReq
	9,  // 14: api.collection.Collection.GetDeviceStreamReport:input_type -> api.collection.GetDeviceStreamReportReq
	10, // 15: api.collection.Collection.GetDeviceStreamEvent:input_type -> api.collection.GetDeviceStreamEventReq
	12, // 16: api.collection.Collection.GetDeviceLastReport:input_type -> api.collection.GetDeviceLastReportReq
	13, // 17: api.collection.Collection.GetLatestRecordsWithinRange:input_type -> api.collection.GetLatestWithinRangeReq
	13, // 18: api.collection.Collection.GetLatestIdWithinRange:input_type -> api.collection.GetLatestWithinRangeReq
	17, // 19: api.collection.Collection.GetStreamLatestRecordsWithinRange:input_type -> api.collection.GetStreamLatestWithinRangeReq
	17, // 20: api.collection.Collection.GetStreamLatestIdWithinRange:input_type -> api.collection.GetStreamLatestWithinRangeReq
	5,  // 21: api.collection.Collection.CreateCollectionRecord:output_type -> api.collection.Empty
	7,  // 22: api.collection.Collection.ListCollectionRecord:output_type -> api.collection.ListCollectionRecordResp
	21, // 23: api.collection.Collection.GetPredictQuality:output_type -> api.waterquality.PredictAndGuessResp
	3,  // 24: api.collection.Collection.GetDeviceStreamReport:output_type -> api.collection.CreateCollectionRecordReq
	11, // 25: api.collection.Collection.GetDeviceStreamEvent:output_type -> api.collection.GetDeviceStreamEventResp
	4,  // 26: api.collection.Collection.GetDeviceLastReport:output_type -> api.collection.CollectionRecord
	15, // 27: api.collection.Collection.GetLatestRecordsWithinRange:output_type -> api.collection.GetLatestRecordsWithinRangeResp
	16, // 28: api.collection.Collection.GetLatestIdWithinRange:output_type -> api.collection.GetLatestIdWithinRangeResp
	18, // 29: api.collection.Collection.GetStreamLatestRecordsWithinRange:output_type -> api.collection.GetStreamLatestRecordsWithinRangeResp
	19, // 30: api.collection.Collection.GetStreamLatestIdWithinRange:output_type -> api.collection.GetStreamLatestIdWithinRangeResp
	21, // [21:31] is the sub-list for method output_type
	11, // [11:21] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_collection_collection_proto_init() }
func file_collection_collection_proto_init() {
	if File_collection_collection_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_collection_collection_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*CreateCollectionRecordReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_collection_collection_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*CollectionRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_collection_collection_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_collection_collection_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*ListCollectionRecordReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_collection_collection_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*ListCollectionRecordResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_collection_collection_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*GetPredictQualityReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_collection_collection_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*GetDeviceStreamReportReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_collection_collection_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*GetDeviceStreamEventReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_collection_collection_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*GetDeviceStreamEventResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_collection_collection_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*GetDeviceLastReportReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_collection_collection_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*GetLatestWithinRangeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_collection_collection_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*GetLatestRecordsAndGuess); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_collection_collection_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*GetLatestRecordsWithinRangeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_collection_collection_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*GetLatestIdWithinRangeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_collection_collection_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*GetStreamLatestWithinRangeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_collection_collection_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*GetStreamLatestRecordsWithinRangeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_collection_collection_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*GetStreamLatestIdWithinRangeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_collection_collection_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_collection_collection_proto_goTypes,
		DependencyIndexes: file_collection_collection_proto_depIdxs,
		EnumInfos:         file_collection_collection_proto_enumTypes,
		MessageInfos:      file_collection_collection_proto_msgTypes,
	}.Build()
	File_collection_collection_proto = out.File
	file_collection_collection_proto_rawDesc = nil
	file_collection_collection_proto_goTypes = nil
	file_collection_collection_proto_depIdxs = nil
}
