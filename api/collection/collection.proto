syntax = "proto3";

package api.collection;

option go_package = "github.com/I-m-Surrounded-by-IoT/backend/api/collection;collection";

import "google/api/annotations.proto";
import "waterquality/waterquality.proto";

service Collection {
  rpc CreateCollectionRecord(CreateCollectionRecordReq) returns (Empty) {
    option (google.api.http) = {
      post : "/collection/record"
      body : "*"
    };
  }

  rpc ListCollectionRecord(ListCollectionRecordReq)
      returns (ListCollectionRecordResp) {
    option (google.api.http) = {
      get : "/collection/record"
    };
  }

  rpc GetPredictQuality(GetPredictQualityReq)
      returns (waterquality.PredictAndGuessResp) {
    option (google.api.http) = {
      get : "/collection/predict_quality"
    };
  }

  rpc GetDeviceStreamReport(GetDeviceStreamReportReq)
      returns (stream CreateCollectionRecordReq) {
    option (google.api.http) = {
      post : "/collection/get_device_stream_report"
      body : "*"
    };
  }

  rpc GetDeviceStreamEvent(GetDeviceStreamEventReq)
      returns (stream GetDeviceStreamEventResp) {
    option (google.api.http) = {
      post : "/collection/get_device_stream_event"
      body : "*"
    };
  }

  rpc GetDeviceLastReport(GetDeviceLastReportReq) returns (CollectionRecord) {
    option (google.api.http) = {
      get : "/device/{id}/last_report"
    };
  }

  rpc GetLatestRecordsWithinRange(GetLatestWithinRangeReq)
      returns (GetLatestRecordsWithinRangeResp) {
    option (google.api.http) = {
      post : "/collection/get_latest_within_range"
      body : "*"
    };
  }

  rpc GetLatestIdWithinRange(GetLatestWithinRangeReq)
      returns (GetLatestIdWithinRangeResp) {
    option (google.api.http) = {
      post : "/collection/get_latest_id_within_range"
      body : "*"
    };
  }

  rpc GetStreamLatestRecordsWithinRange(GetStreamLatestWithinRangeReq)
      returns (stream GetStreamLatestRecordsWithinRangeResp) {
    option (google.api.http) = {
      post : "/collection/get_stream_latest_records_within_range"
      body : "*"
    };
  }

  rpc GetStreamLatestIdWithinRange(GetStreamLatestWithinRangeReq)
      returns (stream GetStreamLatestIdWithinRangeResp) {
    option (google.api.http) = {
      post : "/collection/get_stream_latest_id_within_range"
      body : "*"
    };
  }
}

message CreateCollectionRecordReq {
  uint64 device_id = 1; // @gotags: form:"deviceId" json:"deviceId"
  waterquality.Quality data = 2;
  int64 received_at = 3; // @gotags: form:"receivedAt" json:"receivedAt"
}

message CollectionRecord {
  uint64 id = 1;
  uint64 device_id = 2;  // @gotags: json:"deviceId"
  int64 created_at = 3;  // @gotags: json:"createdAt"
  int64 received_at = 4; // @gotags: json:"receivedAt"
  waterquality.Quality data = 5;
}

message Empty {}

enum CollectionRecordOrder {
  TIMESTAMP = 0;
  CREATED_AT = 1;
}

enum Sort {
  DESC = 0;
  ASC = 1;
}

message ListCollectionRecordReq {
  uint64 device_id = 1;            // @gotags: form:"deviceId" json:"deviceId"
  uint64 page = 2;                 // @gotags: form:"page"
  uint64 size = 3;                 // @gotags: form:"size"
  int64 before = 4;                // @gotags: form:"before"
  int64 after = 5;                 // @gotags: form:"after"
  CollectionRecordOrder order = 6; // @gotags: form:"order"
  Sort sort = 7;                   // @gotags: form:"sort"
}

message ListCollectionRecordResp {
  repeated CollectionRecord records = 1;
  int64 total = 2;
}

message GetPredictQualityReq {
  uint64 device_id = 1; // @gotags: form:"deviceId" json:"deviceId"
}

message GetDeviceStreamReportReq {
  uint64 id = 1; // @gotags: form:"id"
}

message GetDeviceStreamEventReq {
  uint64 id = 1;           // @gotags: form:"id"
  string event_filter = 2; // @gotags: form:"eventFilter" json:"eventFilter"
}

message GetDeviceStreamEventResp {
  string topic = 1;    // @gotags: json:"topic"
  string message = 2;  // @gotags: json:"message"
  int64 timestamp = 3; // @gotags: json:"timestamp"
}

message GetDeviceLastReportReq { uint64 id = 1; }

message GetLatestWithinRangeReq {
  double center_lat = 1; // @gotags: form:"centerLat" json:"centerLat"
  double center_lng = 2; // @gotags: form:"centerLng" json:"centerLng"
  double radiusMeters = 3; // @gotags: form:"radiusMeters" json:"radiusMeters"
}

message GetLatestRecordsAndGuess {
  CollectionRecord record = 1;
  waterquality.PredictAndGuessResp guess = 2;
}

message GetLatestRecordsWithinRangeResp {
  repeated GetLatestRecordsAndGuess records = 1;
}

message GetLatestIdWithinRangeResp { repeated uint64 ids = 1; }

message GetStreamLatestWithinRangeReq {
  double center_lat = 1; // @gotags: form:"centerLat" json:"centerLat"
  double center_lng = 2; // @gotags: form:"centerLng" json:"centerLng"
  double radiusMeters = 3; // @gotags: form:"radiusMeters" json:"radiusMeters"
  uint32 interval = 4; // @gotags: form:"interval" json:"interval"
}

enum GetStreamLatestWithinRangeRespType {
  ADD = 0;
  REMOVE = 1;
}

message GetStreamLatestRecordsWithinRangeResp {
  repeated GetLatestRecordsAndGuess records = 1;
  repeated uint64 ids = 2;
  GetStreamLatestWithinRangeRespType type = 3;
}

message GetStreamLatestIdWithinRangeResp {
  repeated uint64 ids = 1;
  GetStreamLatestWithinRangeRespType type = 2;
}