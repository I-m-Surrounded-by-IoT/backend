syntax = "proto3";

package api.collector;

option go_package = "github.com/I-m-Surrounded-by-IoT/backend/api/collector;collector";

import "google/api/annotations.proto";

service Collector {
  rpc ReportImmediately(ReportImmediatelyReq) returns (ReportImmediatelyResp) {
    option (google.api.http) = {
      post : "/collector/report_immediately"
      body : "*"
    };
  }

  rpc SetReportInterval(SetReportIntervalReq) returns (SetReportIntervalResp) {
    option (google.api.http) = {
      post : "/collector/set_report_interval"
      body : "*"
    };
  }

  rpc GetDeviceStreamLog(GetDeviceStreamLogReq)
      returns (stream GetDeviceStreamLogResp) {
    option (google.api.http) = {
      post : "/collector/get_device_stream_log"
      body : "*"
    };
  }
}

message ReportImmediatelyReq { uint64 id = 1; }

message ReportImmediatelyResp {}

message SetReportIntervalReq {
  uint64 id = 1;
  uint64 interval = 2;
}

message SetReportIntervalResp {}

message GetDeviceStreamLogReq {
  uint64 id = 1;           // @gotags: form:"id" binding:"required"
  string level_filter = 2; // @gotags: form:"levelFilter" json:"levelFilter"
}

message GetDeviceStreamLogResp {
  uint32 level = 1;    // @gotags: json:"level"
  string message = 2;  // @gotags: json:"message"
  int64 timestamp = 3; // @gotags: json:"timestamp"
}