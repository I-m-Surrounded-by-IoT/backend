syntax = "proto3";

package api.collector;

option go_package = "github.com/I-m-Surrounded-by-IoT/backend/api/collector;collector";

import "google/api/annotations.proto";
import "collection/collection.proto";

service Collector {
  rpc ReportImmediately(ReportImmediatelyReq) returns (Empty) {
    option (google.api.http) = {
      post : "/collector/report_immediately"
      body : "*"
    };
  }

  rpc SetReportInterval(SetReportIntervalReq) returns (SetReportIntervalResp) {
    option (google.api.http) = {
      post : "/collector/set_report_interval"
      body : "*"
    };
  }

  rpc GetDeviceStreamReport(GetDeviceStreamReportReq)
      returns (stream collection.CollectionData) {
    option (google.api.http) = {
      post : "/collector/get_device_stream_report"
      body : "*"
    };
  }

  rpc GetDeviceStreamEvent(GetDeviceStreamEventReq)
      returns (stream GetDeviceStreamEventResp) {
    option (google.api.http) = {
      post : "/collector/get_device_stream_event"
      body : "*"
    };
  }
}

message ReportImmediatelyReq { uint64 id = 1; }

message Empty {}

message SetReportIntervalReq {
  uint64 id = 1;
  uint64 interval = 2;
}

message SetReportIntervalResp {}

message GetDeviceStreamReportReq {
  uint64 id = 1; // @gotags: form:"id" binding:"required"
}

message GetDeviceStreamEventReq {
  uint64 id = 1;           // @gotags: form:"id" binding:"required"
  string event_filter = 2; // @gotags: form:"eventFilter" json:"eventFilter"
}

message GetDeviceStreamEventResp {
  string topic = 1;   // @gotags: json:"topic"
  string message = 2; // @gotags: json:"message"
}