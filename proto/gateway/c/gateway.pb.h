/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.8 */

#ifndef PB_API_GATEWAY_PROTO_GATEWAY_GATEWAY_PB_H_INCLUDED
#define PB_API_GATEWAY_PROTO_GATEWAY_GATEWAY_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _api_gateway_GetServerReq {
    char dummy_field;
} api_gateway_GetServerReq;

typedef struct _api_gateway_GetServerResp {
    pb_callback_t server_addr;
} api_gateway_GetServerResp;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define api_gateway_GetServerReq_init_default    {0}
#define api_gateway_GetServerResp_init_default   {{{NULL}, NULL}}
#define api_gateway_GetServerReq_init_zero       {0}
#define api_gateway_GetServerResp_init_zero      {{{NULL}, NULL}}

/* Field tags (for use in manual encoding/decoding) */
#define api_gateway_GetServerResp_server_addr_tag 1

/* Struct field encoding specification for nanopb */
#define api_gateway_GetServerReq_FIELDLIST(X, a) \

#define api_gateway_GetServerReq_CALLBACK NULL
#define api_gateway_GetServerReq_DEFAULT NULL

#define api_gateway_GetServerResp_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   server_addr,       1)
#define api_gateway_GetServerResp_CALLBACK pb_default_field_callback
#define api_gateway_GetServerResp_DEFAULT NULL

extern const pb_msgdesc_t api_gateway_GetServerReq_msg;
extern const pb_msgdesc_t api_gateway_GetServerResp_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define api_gateway_GetServerReq_fields &api_gateway_GetServerReq_msg
#define api_gateway_GetServerResp_fields &api_gateway_GetServerResp_msg

/* Maximum encoded size of messages (where known) */
/* api_gateway_GetServerResp_size depends on runtime parameters */
#define API_GATEWAY_PROTO_GATEWAY_GATEWAY_PB_H_MAX_SIZE api_gateway_GetServerReq_size
#define api_gateway_GetServerReq_size            0

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
