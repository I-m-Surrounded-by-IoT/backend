# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: ""
    version: 0.0.1
paths:
    /collection:
        get:
            tags:
                - CollectionDatabase
            operationId: CollectionDatabase_ListCollectionRecord
            parameters:
                - name: page
                  in: query
                  schema:
                    type: string
                - name: pageSize
                  in: query
                  schema:
                    type: string
                - name: deviceId
                  in: query
                  schema:
                    type: string
                - name: startTimestamp
                  in: query
                  schema:
                    type: string
                - name: endTimestamp
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.collection_database.ListCollectionRecordResp'
        post:
            tags:
                - CollectionDatabase
            operationId: CollectionDatabase_CreateCollectionRecord
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.collection_database.CollectionRecord'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.collection_database.Empty'
    /collector/report_immediately:
        post:
            tags:
                - Collector
            operationId: Collector_ReportImmediately
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.collector.ReportImmediatelyReq'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.collector.ReportImmediatelyResp'
    /collector/set_report_interval:
        post:
            tags:
                - Collector
            operationId: Collector_SetReportInterval
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.collector.SetReportIntervalReq'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.collector.SetReportIntervalResp'
    /device:
        post:
            tags:
                - Device
            operationId: Device_CreateDevice
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.device.CreateDeviceReq'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.device.DeviceRecord'
    /device/get_or_create:
        post:
            tags:
                - Device
            operationId: Device_GetOrCreateDevice
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.device.GetOrCreateDeviceReq'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.device.DeviceRecord'
    /device/mac/{mac}:
        get:
            tags:
                - Device
            operationId: Device_GetDeviceByMac
            parameters:
                - name: mac
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.device.DeviceRecord'
    /device/{id}:
        get:
            tags:
                - Device
            operationId: Device_GetDevice
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.device.DeviceRecord'
    /log/device:
        get:
            tags:
                - Log
            operationId: Log_GetDeviceLogs
            parameters:
                - name: deviceId
                  in: query
                  schema:
                    type: string
                - name: page
                  in: query
                  schema:
                    type: string
                - name: pageSize
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.log.DeviceLog'
        post:
            tags:
                - Log
            operationId: Log_AddDeviceLog
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.log.DeviceLog'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.log.Empty'
    /user:
        post:
            tags:
                - User
            operationId: User_CreateUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.CreateUserReq'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.UserInfo'
    /user/name:
        put:
            tags:
                - User
            operationId: User_SetUserName
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.SetUserNameReq'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.Empty'
    /user/password:
        put:
            tags:
                - User
            operationId: User_SetUserPassword
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.SetUserPasswordReq'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.Empty'
    /user/role:
        put:
            tags:
                - User
            operationId: User_SetUserRole
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.SetUserRoleReq'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.Empty'
    /user/status:
        put:
            tags:
                - User
            operationId: User_SetUserStatus
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.SetUserStatusReq'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.Empty'
    /user/validate:
        post:
            tags:
                - User
            operationId: User_ValidateUserPassword
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.ValidateUserPasswordReq'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.ValidateUserPasswordResp'
    /user/{id}:
        get:
            tags:
                - User
            operationId: User_GetUser
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.UserInfo'
components:
    schemas:
        api.collection_database.CollectionRecord:
            type: object
            properties:
                deviceId:
                    type: string
                timestamp:
                    type: string
                geoPoint:
                    $ref: '#/components/schemas/api.collection_database.GeoPoint'
                temperature:
                    type: number
                    format: float
        api.collection_database.Empty:
            type: object
            properties: {}
        api.collection_database.GeoPoint:
            type: object
            properties:
                lat:
                    type: number
                    format: double
                lng:
                    type: number
                    format: double
        api.collection_database.ListCollectionRecordResp:
            type: object
            properties:
                collectionInfos:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.collection_database.ListCollectionRecordResp_CollectionRecord'
        api.collection_database.ListCollectionRecordResp_CollectionRecord:
            type: object
            properties:
                createdAt:
                    type: string
                deviceId:
                    type: string
                timestamp:
                    type: string
                geoPoint:
                    $ref: '#/components/schemas/api.collection_database.GeoPoint'
        api.collector.ReportImmediatelyReq:
            type: object
            properties:
                id:
                    type: string
        api.collector.ReportImmediatelyResp:
            type: object
            properties: {}
        api.collector.SetReportIntervalReq:
            type: object
            properties:
                id:
                    type: string
                interval:
                    type: string
        api.collector.SetReportIntervalResp:
            type: object
            properties: {}
        api.device.CreateDeviceReq:
            type: object
            properties:
                mac:
                    type: string
        api.device.DeviceRecord:
            type: object
            properties:
                id:
                    type: string
                createdAt:
                    type: string
                updatedAt:
                    type: string
                mac:
                    type: string
                comment:
                    type: string
        api.device.GetOrCreateDeviceReq:
            type: object
            properties:
                mac:
                    type: string
        api.log.DeviceLog:
            type: object
            properties:
                deviceId:
                    type: string
                log:
                    type: string
        api.log.Empty:
            type: object
            properties: {}
        api.user.CreateUserReq:
            type: object
            properties:
                name:
                    type: string
                password:
                    type: string
                role:
                    type: integer
                    format: enum
                status:
                    type: integer
                    format: enum
        api.user.Empty:
            type: object
            properties: {}
        api.user.SetUserNameReq:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
        api.user.SetUserPasswordReq:
            type: object
            properties:
                id:
                    type: string
                password:
                    type: string
        api.user.SetUserRoleReq:
            type: object
            properties:
                id:
                    type: string
                role:
                    type: integer
                    format: enum
        api.user.SetUserStatusReq:
            type: object
            properties:
                id:
                    type: string
                status:
                    type: integer
                    format: enum
        api.user.UserInfo:
            type: object
            properties:
                id:
                    type: string
                createdAt:
                    type: string
                updatedAt:
                    type: string
                name:
                    type: string
                role:
                    type: integer
                    format: enum
                status:
                    type: integer
                    format: enum
        api.user.ValidateUserPasswordReq:
            type: object
            properties:
                id:
                    type: string
                password:
                    type: string
        api.user.ValidateUserPasswordResp:
            type: object
            properties:
                valid:
                    type: boolean
tags:
    - name: CollectionDatabase
    - name: Collector
    - name: Device
    - name: Log
    - name: User
