syntax = "proto3";
package kratos.api;

option go_package = "backend/internal/conf;conf";

import "google/protobuf/duration.proto";

message Registry {
  message Etcd {
    string endpoint = 1;                  // @gotags: env:"ETCD_ENDPOINT"
    string username = 2;                  // @gotags: env:"ETCD_USERNAME"
    string password = 3;                  // @gotags: env:"ETCD_PASSWORD"
    google.protobuf.Duration timeout = 4; // @gotags: env:"ETCD_TIMEOUT"
  }
  Etcd etcd = 2;
}

message WebServerConfig {
  message TLS {
    string cert_file = 1; // @gotags: env:"WEB_CERT_FILE"
    string key_file = 2;  // @gotags: env:"WEB_KEY_FILE"
    string ca_file = 3;   // @gotags: env:"WEB_CA_FILE"
  }
  string addr = 1; // @gotags: env:"WEB_ADDR"
  TLS tls = 2;
  string custom_endpoint = 3; // @gotags: env:"WEB_CUSTOM_ENDPOINT"
}

message GrpcServerConfig {
  message TLS {
    string cert_file = 1; // @gotags: env:"GRPC_CERT_FILE"
    string key_file = 2;  // @gotags: env:"GRPC_KEY_FILE"
    string ca_file = 3;   // @gotags: env:"GRPC_CA_FILE"
  }
  string addr = 1; // @gotags: env:"GRPC_ADDR"
  TLS tls = 2;
  string custom_endpoint = 3;           // @gotags: env:"GRPC_CUSTOM_ENDPOINT"
  google.protobuf.Duration timeout = 4; // @gotags: env:"GRPC_SERVER_TIMEOUT"
  string jwt_secret = 5;                // @gotags: env:"GRPC_SERVER_JWT_SECRET"
}

message TcpServer {
  message TLS {
    string cert_file = 1; // @gotags: env:"TCP_CERT_FILE"
    string key_file = 2;  // @gotags: env:"TCP_KEY_FILE"
    string ca_file = 3;   // @gotags: env:"TCP_CA_FILE"
  }
  string addr = 1; // @gotags: env:"TCP_ADDR"
  TLS tls = 2;
  string custom_endpoint = 3;           // @gotags: env:"TCP_CUSTOM_ENDPOINT"
  google.protobuf.Duration timeout = 4; // @gotags: env:"TCP_SERVER_TIMEOUT"
}

message CollectorConfig {
  bool database_tls = 1; // @gotags: env:"COLLECTOR_DATABASE_TLS"
  string database_jwt_secret =
      2; // @gotags: env:"COLLECTOR_DATABASE_JWT_SECRET"
}

message KafkaConfig {
  string brokers = 1;  // @gotags: env:"KAFKA_BROKERS"
  string user = 2;     // @gotags: env:"KAFKA_USER"
  string password = 3; // @gotags: env:"KAFKA_PASSWORD"
}

message RedisConfig {
  string addr = 1;     // @gotags: env:"REDIS_ADDR"
  string username = 2; // @gotags: env:"REDIS_USERNAME"
  string password = 3; // @gotags: env:"REDIS_PASSWORD"
  int32 db = 4;        // @gotags: env:"REDIS_DB"
}

message CollectorServer {
  TcpServer tcp_server = 1;
  GrpcServerConfig grpc_server = 2;
  Registry registry = 3;
  CollectorConfig config = 4;
  KafkaConfig kafka = 5;
}

message CollectionConfig {}

message CollectionServer {
  GrpcServerConfig server = 1;
  Registry registry = 2;
  DatabaseServerConfig database = 3;
  CollectionConfig config = 4;
  KafkaConfig kafka = 5;
}

message GatewayConfig {}

message GatewayServer {
  TcpServer server = 1;
  Registry registry = 2;
  GatewayConfig config = 3;
}

message DatabaseServerConfig {
  string host = 1;       // @gotags: env:"DATABASE_HOST"
  uint32 port = 2;       // @gotags: env:"DATABASE_PORT"
  string user = 3;       // @gotags: env:"DATABASE_USER"
  string password = 4;   // @gotags: env:"DATABASE_PASSWORD"
  string name = 5;       // @gotags: env:"DATABASE_NAME"
  string ssl_mode = 6;   // @gotags: env:"DATABASE_SSLMODE"
  bool auto_migrate = 7; // @gotags: env:"DATABASE_AUTOMIGRATE"
}

message UserConfig {}

message UserServer {
  GrpcServerConfig server = 1;
  Registry registry = 2;
  DatabaseServerConfig database = 3;
  UserConfig config = 4;
  RedisConfig redis = 5;
}

message WebConfig {
  message JWT {
    string secret = 1; // @gotags: env:"WEB_JWT_SECRET"
    string expire = 2; // @gotags: env:"WEB_JWT_EXPIRE"
  }
  JWT jwt = 1;
}

message WebServer {
  WebServerConfig server = 1;
  Registry registry = 2;
  WebConfig config = 3;
  RedisConfig redis = 4;
}

message LogConfig {}

message LogServer {
  GrpcServerConfig server = 1;
  Registry registry = 2;
  DatabaseServerConfig database = 3;
  LogConfig config = 4;
  KafkaConfig kafka = 5;
}

message DeviceConfig {}

message DeviceServer {
  GrpcServerConfig server = 1;
  Registry registry = 2;
  DatabaseServerConfig database = 3;
  DeviceConfig config = 4;
}