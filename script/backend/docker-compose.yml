version: "3.3"
services:
  web:
    image: "zijiren/backend:latest"
    container_name: web
    restart: unless-stopped
    ports:
      - "9500:8080"
    environment:
      - PUID=0
      - PGID=0
      - UMASK=022
      - TZ=Asia/Shanghai
      - TRACING_ENDPOINT=${TRACING_ENDPOINT}
      - ETCD_ENDPOINT=${ETCD_ENDPOINT}
      - REDIS_ADDR=${REDIS_ADDR}
      - REDIS_USERNAME=${REDIS_USERNAME}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_DB=${REDIS_DB}
      - WEB_JWT_SECRET=${WEB_JWT_SECRET}
      - WEB_JWT_EXPIRE=${WEB_JWT_EXPIRE}
    command: web

  log:
    image: "zijiren/backend:latest"
    container_name: log
    restart: unless-stopped
    ports:
      - "13000:9000"
    environment:
      - PUID=0
      - PGID=0
      - UMASK=022
      - TZ=Asia/Shanghai
      - TRACING_ENDPOINT=${TRACING_ENDPOINT}
      - ETCD_ENDPOINT=${ETCD_ENDPOINT}
      - GRPC_CUSTOM_ENDPOINT=grpc://${CUSTON_EXTERNAL_IP}:13000
      - DATABASE_AUTOMIGRATE=${DATABASE_AUTOMIGRATE-$LOG_DATABASE_AUTOMIGRATE}
      - DATABASE_HOST=${DATABASE_HOST-$LOG_DATABASE_HOST}
      - DATABASE_PORT=${DATABASE_PORT-$LOG_DATABASE_PORT}
      - DATABASE_USER=${DATABASE_USER-$LOG_DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD-$LOG_DATABASE_PASSWORD}
      - DATABASE_NAME=${DATABASE_NAME-$LOG_DATABASE_NAME}
      - KAFKA_BROKERS=${KAFKA_BROKERS}
      - KAFKA_USER=${KAFKA_USER}
      - KAFKA_PASSWORD=${KAFKA_PASSWORD}
    command: log

  device:
    image: "zijiren/backend:latest"
    container_name: device
    restart: unless-stopped
    ports:
      - "8500:9000"
    environment:
      - PUID=0
      - PGID=0
      - UMASK=022
      - TZ=Asia/Shanghai
      - TRACING_ENDPOINT=${TRACING_ENDPOINT}
      - ETCD_ENDPOINT=${ETCD_ENDPOINT}
      - GRPC_CUSTOM_ENDPOINT=grpc://${CUSTON_EXTERNAL_IP}:8500
      - DATABASE_AUTOMIGRATE=${DATABASE_AUTOMIGRATE-$DEVICE_DATABASE_AUTOMIGRATE}
      - DATABASE_HOST=${DATABASE_HOST-$DEVICE_DATABASE_HOST}
      - DATABASE_PORT=${DATABASE_PORT-$DEVICE_DATABASE_PORT}
      - DATABASE_USER=${DATABASE_USER-$DEVICE_DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD-$DEVICE_DATABASE_PASSWORD}
      - DATABASE_NAME=${DATABASE_NAME-$DEVICE_DATABASE_NAME}
      - REDIS_ADDR=${REDIS_ADDR}
      - REDIS_USERNAME=${REDIS_USERNAME}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_DB=${REDIS_DB}
      - DEVICE_EMQX_API=${DEVICE_EMQX_API}
      - DEVICE_EMQX_APPID=${DEVICE_EMQX_APPID}
      - DEVICE_EMQX_APPSECRET=${DEVICE_EMQX_APPSECRET}
    command: device

  collection:
    image: "zijiren/backend:latest"
    container_name: collection
    restart: unless-stopped
    ports:
      - "9000:9000"
    environment:
      - PUID=0
      - PGID=0
      - UMASK=022
      - TZ=Asia/Shanghai
      - TRACING_ENDPOINT=${TRACING_ENDPOINT}
      - ETCD_ENDPOINT=${ETCD_ENDPOINT}
      - GRPC_CUSTOM_ENDPOINT=grpc://${CUSTON_EXTERNAL_IP}:9000
      - DATABASE_AUTOMIGRATE=${DATABASE_AUTOMIGRATE-$COLLECTION_DATABASE_AUTOMIGRATE}
      - DATABASE_HOST=${DATABASE_HOST-$COLLECTION_DATABASE_HOST}
      - DATABASE_PORT=${DATABASE_PORT-$COLLECTION_DATABASE_PORT}
      - DATABASE_USER=${DATABASE_USER-$COLLECTION_DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD-$COLLECTION_DATABASE_PASSWORD}
      - DATABASE_NAME=${DATABASE_NAME-$COLLECTION_DATABASE_NAME}
      - KAFKA_BROKERS=${KAFKA_BROKERS}
      - KAFKA_USER=${KAFKA_USER}
      - KAFKA_PASSWORD=${KAFKA_PASSWORD}
      - REDIS_ADDR=${REDIS_ADDR}
      - REDIS_USERNAME=${REDIS_USERNAME}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_DB=${REDIS_DB}
    command: collection

  user:
    image: "zijiren/backend:latest"
    container_name: user
    restart: unless-stopped
    ports:
      - "12000:9000"
    environment:
      - PUID=0
      - PGID=0
      - UMASK=022
      - TZ=Asia/Shanghai
      - TRACING_ENDPOINT=${TRACING_ENDPOINT}
      - ETCD_ENDPOINT=${ETCD_ENDPOINT}
      - GRPC_CUSTOM_ENDPOINT=grpc://${CUSTON_EXTERNAL_IP}:12000
      - DATABASE_AUTOMIGRATE=${DATABASE_AUTOMIGRATE-$USER_DATABASE_AUTOMIGRATE}
      - DATABASE_HOST=${DATABASE_HOST-$USER_DATABASE_HOST}
      - DATABASE_PORT=${DATABASE_PORT-$USER_DATABASE_PORT}
      - DATABASE_USER=${DATABASE_USER-$USER_DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD-$USER_DATABASE_PASSWORD}
      - DATABASE_NAME=${DATABASE_NAME-$USER_DATABASE_NAME}
      - REDIS_ADDR=${REDIS_ADDR}
      - REDIS_USERNAME=${REDIS_USERNAME}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_DB=${REDIS_DB}
    command: user

  collector:
    image: "zijiren/backend:latest"
    container_name: collector
    restart: unless-stopped
    ports:
      - "11000:9000"
    environment:
      - PUID=0
      - PGID=0
      - UMASK=022
      - TZ=Asia/Shanghai
      - TRACING_ENDPOINT=${TRACING_ENDPOINT}
      - ETCD_ENDPOINT=${ETCD_ENDPOINT}
      - GRPC_CUSTOM_ENDPOINT=grpc://${CUSTON_EXTERNAL_IP}:11000
      - KAFKA_BROKERS=${KAFKA_BROKERS}
      - KAFKA_USER=${KAFKA_USER}
      - KAFKA_PASSWORD=${KAFKA_PASSWORD}
      - COLLECTOR_MQTT_ADDR=${COLLECTOR_MQTT_ADDR}
      - COLLECTOR_MQTT_CLIENT_ID=${COLLECTOR_MQTT_CLIENT_ID}
      - COLLECTOR_MQTT_PASSWORD=${COLLECTOR_MQTT_PASSWORD}
      - REDIS_ADDR=${REDIS_ADDR}
      - REDIS_USERNAME=${REDIS_USERNAME}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_DB=${REDIS_DB}
    command: collector

  email:
    image: "zijiren/backend:latest"
    container_name: email
    restart: unless-stopped
    ports:
      - "14000:9000"
    environment:
      - PUID=0
      - PGID=0
      - UMASK=022
      - TZ=Asia/Shanghai
      - TRACING_ENDPOINT=${TRACING_ENDPOINT}
      - ETCD_ENDPOINT=${ETCD_ENDPOINT}
      - GRPC_CUSTOM_ENDPOINT=grpc://${CUSTON_EXTERNAL_IP}:14000
      - KAFKA_BROKERS=${KAFKA_BROKERS}
      - KAFKA_USER=${KAFKA_USER}
      - KAFKA_PASSWORD=${KAFKA_PASSWORD}
      - EMAIL_SMTP_HOST=${EMAIL_SMTP_HOST}
      - EMAIL_SMTP_PORT=${EMAIL_SMTP_PORT}
      - EMAIL_SMTP_PROTOCOL=${EMAIL_SMTP_PROTOCOL}
      - EMAIL_SMTP_USERNAME=${EMAIL_SMTP_USERNAME}
      - EMAIL_SMTP_PASSWORD=${EMAIL_SMTP_PASSWORD}
      - EMAIL_SMTP_FROM=${EMAIL_SMTP_FROM}
    command: email

  captcha:
    image: "zijiren/backend:latest"
    container_name: captcha
    restart: unless-stopped
    ports:
      - "15000:9000"
    environment:
      - PUID=0
      - PGID=0
      - UMASK=022
      - TZ=Asia/Shanghai
      - TRACING_ENDPOINT=${TRACING_ENDPOINT}
      - ETCD_ENDPOINT=${ETCD_ENDPOINT}
      - GRPC_CUSTOM_ENDPOINT=grpc://${CUSTON_EXTERNAL_IP}:15000
      - KAFKA_BROKERS=${KAFKA_BROKERS}
      - KAFKA_USER=${KAFKA_USER}
      - KAFKA_PASSWORD=${KAFKA_PASSWORD}
      - REDIS_ADDR=${REDIS_ADDR}
      - REDIS_USERNAME=${REDIS_USERNAME}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_DB=${REDIS_DB}
    command: captcha

  notify:
    image: "zijiren/backend:latest"
    container_name: notify
    restart: unless-stopped
    ports:
      - "16000:9000"
    environment:
      - PUID=0
      - PGID=0
      - UMASK=022
      - TZ=Asia/Shanghai
      - TRACING_ENDPOINT=${TRACING_ENDPOINT}
      - ETCD_ENDPOINT=${ETCD_ENDPOINT}
      - GRPC_CUSTOM_ENDPOINT=grpc://${CUSTON_EXTERNAL_IP}:16000
      - KAFKA_BROKERS=${KAFKA_BROKERS}
      - KAFKA_USER=${KAFKA_USER}
      - KAFKA_PASSWORD=${KAFKA_PASSWORD}
    command: notify

  message:
    image: "zijiren/backend:latest"
    container_name: message
    restart: unless-stopped
    ports:
      - "18000:9000"
    environment:
      - PUID=0
      - PGID=0
      - UMASK=022
      - TZ=Asia/Shanghai
      - TRACING_ENDPOINT=${TRACING_ENDPOINT}
      - ETCD_ENDPOINT=${ETCD_ENDPOINT}
      - GRPC_CUSTOM_ENDPOINT=grpc://${CUSTON_EXTERNAL_IP}:18000
      - DATABASE_AUTOMIGRATE=${DATABASE_AUTOMIGRATE-$MESSAGE_DATABASE_AUTOMIGRATE}
      - DATABASE_HOST=${DATABASE_HOST-$MESSAGE_DATABASE_HOST}
      - DATABASE_PORT=${DATABASE_PORT-$MESSAGE_DATABASE_PORT}
      - DATABASE_USER=${DATABASE_USER-$MESSAGE_DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD-$MESSAGE_DATABASE_PASSWORD}
      - DATABASE_NAME=${DATABASE_NAME-$MESSAGE_DATABASE_NAME}
      - KAFKA_BROKERS=${KAFKA_BROKERS}
      - KAFKA_USER=${KAFKA_USER}
      - KAFKA_PASSWORD=${KAFKA_PASSWORD}
    command: message
