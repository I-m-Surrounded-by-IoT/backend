version: "3.3"
services:
  etcd:
    image: bitnami/etcd:latest
    container_name: backend-etcd
    restart: unless-stopped
    ports:
      - 2379:2379
      - 2380:2380
    environment:
      - ALLOW_NONE_AUTHENTICATION=yes

  jaeger:
    image: jaegertracing/all-in-one:1
    container_name: jaeger
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "14268:14268"
      - "9411:9411"
    environment:
      - COLLECTOR_ZIPKIN_HTTP_PORT=9411

  redis:
    image: redis:alpine
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    logging:
      options:
        max-size: "3m"
    volumes:
      - redis_data:/data
    environment:
      TZ: ${TZ-Asia/Shanghai}
    command: >-
      --requirepass "" --maxclients 10000 --appendonly yes --appendfsync everysec --maxmemory 512mb --loglevel warning --databases 1 --save "" --stop-writes-on-bgsave-error yes --rdbcompression yes --rdbchecksum yes --dbfilename dump.rdb

  kafka-0:
    image: bitnami/kafka:3.6
    container_name: backend-kafka-0
    restart: unless-stopped
    ports:
      - "9094:9094"
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka-0:9093,1@kafka-1:9093,2@kafka-2:9093
      - KAFKA_KRAFT_CLUSTER_ID=abcdefghijklmnopqrstuv
      # Listeners
      - KAFKA_CFG_LISTENERS=INTERNAL://:9092,CONTROLLER://:9093,EXTERNAL://0.0.0.0:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://kafka-0:9092,EXTERNAL://${CUSTON_EXTERNAL_IP-localhost}:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL
      # Clustering
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=3
      - KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=3
      - KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR=2
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    volumes:
      - kafka_0_data:/bitnami/kafka
  kafka-1:
    image: bitnami/kafka:3.6
    container_name: backend-kafka-1
    restart: unless-stopped
    ports:
      - "9095:9095"
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka-0:9093,1@kafka-1:9093,2@kafka-2:9093
      - KAFKA_KRAFT_CLUSTER_ID=abcdefghijklmnopqrstuv
      # Listeners
      - KAFKA_CFG_LISTENERS=INTERNAL://:9092,CONTROLLER://:9093,EXTERNAL://0.0.0.0:9095
      - KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://kafka-1:9092,EXTERNAL://${CUSTON_EXTERNAL_IP-localhost}:9095
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL
      # Clustering
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=3
      - KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=3
      - KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR=2
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    volumes:
      - kafka_1_data:/bitnami/kafka
  kafka-2:
    image: bitnami/kafka:3.6
    container_name: backend-kafka-2
    restart: unless-stopped
    ports:
      - "9096:9096"
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=2
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka-0:9093,1@kafka-1:9093,2@kafka-2:9093
      - KAFKA_KRAFT_CLUSTER_ID=abcdefghijklmnopqrstuv
      # Listeners
      - KAFKA_CFG_LISTENERS=INTERNAL://:9092,CONTROLLER://:9093,EXTERNAL://0.0.0.0:9096
      - KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://kafka-2:9092,EXTERNAL://${CUSTON_EXTERNAL_IP-localhost}:9096
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL
      # Clustering
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=3
      - KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=3
      - KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR=2
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    volumes:
      - kafka_2_data:/bitnami/kafka

  emqx1:
    image: emqx:latest
    container_name: emqx1
    environment:
      - PUID=0
      - PGID=0
      - UMASK=022
      - TZ=Asia/Shanghai
      - "EMQX_NODE_NAME=emqx@node1.emqx.io"
      - "EMQX_CLUSTER__DISCOVERY_STRATEGY=static"
      - "EMQX_CLUSTER__STATIC__SEEDS=[emqx@node1.emqx.io,emqx@node2.emqx.io]"
    healthcheck:
      test: ["CMD", "/opt/emqx/bin/emqx ctl", "status"]
      interval: 5s
      timeout: 25s
      retries: 5
    volumes:
      - ./emqx/data/1:/opt/emqx/data
      - ./emqx/log/1:/opt/emqx/log
    networks:
      emqx-bridge:
        aliases:
          - node1.emqx.io
    ports:
      - 1883:1883
      - 8083:8083
      - 8084:8084
      - 8883:8883
      - 18083:18083
  emqx2:
    image: emqx:latest
    container_name: emqx2
    environment:
      - PUID=0
      - PGID=0
      - UMASK=022
      - TZ=Asia/Shanghai
      - "EMQX_NODE_NAME=emqx@node2.emqx.io"
      - "EMQX_CLUSTER__DISCOVERY_STRATEGY=static"
      - "EMQX_CLUSTER__STATIC__SEEDS=[emqx@node1.emqx.io,emqx@node2.emqx.io]"
    healthcheck:
      test: ["CMD", "/opt/emqx/bin/emqx ctl", "status"]
      interval: 5s
      timeout: 25s
      retries: 5
    volumes:
      - ./emqx/data/2:/opt/emqx/data
      - ./emqx/log/2:/opt/emqx/log
    networks:
      emqx-bridge:
        aliases:
          - node2.emqx.io

  postgres-log:
    image: postgres:alpine
    container_name: postgres-log
    restart: unless-stopped
    ports:
      - "5000:5432"
    volumes:
      - ./db/log:/var/lib/postgresql
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: log
      POSTGRES_DB: postgres
      TZ: ${TZ-Asia/Shanghai}
    logging:
      options:
        max-size: "3m"

  postgres-device:
    image: postgres:alpine
    container_name: postgres-device
    restart: unless-stopped
    ports:
      - "5001:5432"
    volumes:
      - ./db/device:/var/lib/postgresql
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: device
      POSTGRES_DB: postgres
      TZ: ${TZ-Asia/Shanghai}
    logging:
      options:
        max-size: "3m"

  postgres-collection:
    image: postgis/postgis:16-3.4-alpine
    container_name: postgres-collection
    restart: unless-stopped
    ports:
      - "5002:5432"
    volumes:
      - ./db/collection:/var/lib/postgresql
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: collection
      POSTGRES_DB: postgres
      TZ: ${TZ-Asia/Shanghai}
    logging:
      options:
        max-size: "3m"

  postgres-user:
    image: postgres:alpine
    container_name: postgres-user
    restart: unless-stopped
    ports:
      - "5003:5432"
    volumes:
      - ./db/user:/var/lib/postgresql
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: user
      POSTGRES_DB: postgres
      TZ: ${TZ-Asia/Shanghai}
    logging:
      options:
        max-size: "3m"

  postgres-message:
    image: postgres:alpine
    container_name: postgres-message
    restart: unless-stopped
    ports:
      - "5004:5432"
    volumes:
      - ./db/message:/var/lib/postgresql
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: message
      POSTGRES_DB: postgres
      TZ: ${TZ-Asia/Shanghai}
    logging:
      options:
        max-size: "3m"

volumes:
  redis_data:
    driver: local
  kafka_0_data:
    driver: local
  kafka_1_data:
    driver: local
  kafka_2_data:
    driver: local

networks:
  emqx-bridge:
    driver: bridge
